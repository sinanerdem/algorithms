#include "mult150.h"

mult150::mult150(char* a, char* b): _m1(NULL), _m2(NULL){
	_lena = strlen(a);
	_m1 = new int[_lena];
	for(int i=0;i<=_lena-1;i++){
		_m1[i] = a[i]-'0';
	}
	_lenb = strlen(b);
	_m2 = new int[_lenb];
	for(int i=0;i<=_lenb-1;i++){
		_m2[i] = b[i]-'0';
	}
	_multiply();
	cout << _result;
}
mult150::~mult150(){
	delete[] _m1;
	delete[] _m2;
}
void mult150::_multiply(){
	int resultInt[150] = {0};
	int rcounter = 1;
	int kcounter = 1;
	int carrym = 0;
	int carrya = 0;
	for(int i=_lenb-1 ; i>=0 ; i--){
		for(int j=_lena-1 ; j >=0 ; j--){
			int x = _m2[i]*_m1[j] + carrym;
			carrym = x/10;
			int y = resultInt[150-rcounter] + (x%10) + carrya;
			carrya = y/10;
			resultInt[150-rcounter] = y%10;
			rcounter++;
		}
		resultInt[150-rcounter]+=carrym;
		resultInt[150-rcounter]+=carrya;
		carrym = 0;
		carrya = 0;
		kcounter++;
		rcounter=kcounter;
	}
	int dif = _countZeros(resultInt);
	int length = 150-dif;
	for (int i=0 ; i<=length; i++){
		_result[i]=resultInt[i+dif];
	}
	_result[length+1]='\0';
}
int _countZeros(const int a[]){
	int count = 0;
	for(int i=0 ; i<150 ; i++){
		if(a[i] == 0){
			count++;
		} else{
			return count;
		}
	}
}
